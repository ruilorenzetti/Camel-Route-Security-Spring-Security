<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camel="http://camel.apache.org/schema/spring"
	xmlns:spring-security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       http://camel.apache.org/schema/spring-security http://camel.apache.org/schema/spring-security/camel-spring-security.xsd">
	<import resource="classpath:META-INF/spring/services.cxf.xml" />
	<import resource="classpath:META-INF/spring/beans.xml" />

	<authorizationPolicy id="user" access="ROLE_USER"
		authenticationManager="authenticationManager" accessDecisionManager="accessDecisionManager"
		xmlns="http://camel.apache.org/schema/spring-security" />

	<authorizationPolicy id="proprete" access="ROLE_SERVICE_PROPRETE"
		authenticationManager="authenticationManager" accessDecisionManager="accessDecisionManager"
		xmlns="http://camel.apache.org/schema/spring-security" />

	<authorizationPolicy id="etatcivil" access="ROLE_SERVICE_ETATCIVIL"
		authenticationManager="authenticationManager" accessDecisionManager="accessDecisionManager"
		xmlns="http://camel.apache.org/schema/spring-security" />

	<spring-security:authentication-manager alias="authenticationManager">
		<spring-security:authentication-provider>
			<spring-security:user-service>
				<spring-security:user name="alice" password="alice" authorities="ROLE_SERVICE_PROPRETE, ROLE_USER" />
				<spring-security:user name="bob" password="bob"	authorities="ROLE_SERVICE_ETATCIVIL, ROLE_USER" />
			</spring-security:user-service>
		</spring-security:authentication-provider>
	</spring-security:authentication-manager>

	<camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">
		<onException>
			<exception>org.springframework.security.authentication.BadCredentialsException</exception>
			<handled>
				<constant>true</constant>
			</handled>
            <transform>
                <simple>username and/or password not correct for ${body}</simple>
            </transform>
			<bean ref="employees" method="getEmptyEmployee" />
		</onException>
		<onException>
			<exception>org.apache.camel.CamelAuthorizationException</exception>
			<handled>
				<constant>true</constant>
			</handled>
			<transform>
				<simple>service requires authentication for ${body}</simple>
			</transform>
            <bean ref="employees" method="getEmptyEmployee" />
		</onException>
		<onException>
			<exception>org.springframework.security.access.AccessDeniedException</exception>
			<handled>
				<constant>true</constant>
			</handled>
			<choice>
				<when>
					<simple>${exception.policyId} == 'employee'</simple>
					<transform>
						<simple>role ROLE_EMPLOYEE required for ${body}</simple>
					</transform>
				</when>
				<when>
					<simple>${exception.policyId} == 'manager'</simple>
					<transform>
						<simple>role ROLE_MANAGER required for ${body}</simple>
					</transform>
				</when>
				<when>
					<simple>${exception.policyId} == 'user'</simple>
					<transform>
						<simple>role ROLE_USER required for ${body}</simple>
					</transform>
				</when>
			</choice>
            <bean ref="employees" method="getEmptyEmployee" />
		</onException>

		<!-- call this endpoint with an employee ID value 10001 (Alice, manager) or 10002 (Bob, employee) -->
		<route id="empInfoService">
			<from uri="cxf:bean:EmpInfoService" />
			<log message="empInfoEndpoint started with body ${body}" />

			<bean ref="tokenHelper" />

			<policy ref="user">
				<!-- body always consists of a String employee ID only -->
				<convertBodyTo type="String" />

				<to uri="direct:hr" />

				<choice>
					<when>
						<method bean="employees" method="isServiceEtatCivil" />
						<to uri="direct:sac" />
					</when>
					<otherwise>
						<to uri="direct:ac" />
					</otherwise>
				</choice>
			</policy>
		</route>

		<route id="hr">
			<from uri="direct:hr" />
			
            <policy ref="user">
				<bean ref="employees" method="getEmployeeData" />
	
				<log message="hr finished with body ${body}" />
			</policy>
		</route>

		<route id="ac">
			<from uri="direct:ac" />

            <policy ref="proprete">
				<bean ref="ordredemission" method="getOrdreDeMissionPropreteData" />
	
				<log message="ac finished with body ${body}" />
            </policy>
		</route>

		<route id="sac">
			<from uri="direct:sac" />

            <policy ref="etatcivil">
				<bean ref="ordredemission" method="GetOrdreMissionEtatCivil" />
				
	
				<log message="sac finished with body ${body}" />
            </policy>
		</route>
	</camelContext>
</beans>